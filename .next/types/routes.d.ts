// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/browse" | "/create" | "/inbox" | "/inbox/[id]" | "/posts/[id]" | "/profile" | "/profile/bookmarked" | "/search" | "/settings" | "/users/[username]"
type AppRouteHandlerRoutes = "/api/auth/[...nextauth]" | "/api/notifications/push" | "/api/notifications/stream" | "/api/upload"
type PageRoutes = never
type LayoutRoutes = "/" | "/inbox"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/auth/[...nextauth]": { "nextauth": string[]; }
  "/api/notifications/push": {}
  "/api/notifications/stream": {}
  "/api/upload": {}
  "/browse": {}
  "/create": {}
  "/inbox": {}
  "/inbox/[id]": { "id": string; }
  "/posts/[id]": { "id": string; }
  "/profile": {}
  "/profile/bookmarked": {}
  "/search": {}
  "/settings": {}
  "/users/[username]": { "username": string; }
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": "modal"
  "/inbox": "chat" | "contactList"
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
