{"version":3,"sources":["turbopack:///[project]/src/components/Preloader.tsx/__nextjs-internal-proxy.mjs","turbopack:///[project]/src/components/PostsGrid.tsx/__nextjs-internal-proxy.mjs","turbopack:///[project]/node_modules/@radix-ui/themes/dist/esm/components/avatar.js/__nextjs-internal-proxy.mjs","turbopack:///[project]/node_modules/@radix-ui/themes/src/components/avatar.tsx","turbopack:///[project]/src/components/SearchForm.tsx/__nextjs-internal-proxy.mjs","turbopack:///[project]/src/app/(routes)/search/page.tsx","turbopack:///[project]/src/components/SearchResults.tsx"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/Preloader.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Preloader.tsx\",\n    \"default\",\n);\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/PostsGrid.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/PostsGrid.tsx\",\n    \"default\",\n);\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@radix-ui/themes/dist/esm/components/avatar.js\",\n    \"Avatar\",\n);\n","'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Avatar as AvatarPrimitive } from 'radix-ui';\n\nimport { avatarPropDefs } from './avatar.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { getSubtree } from '../helpers/get-subtree.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ninterface AvatarProps extends MarginProps, AvatarImplProps {}\nconst Avatar = React.forwardRef<AvatarImplElement, AvatarProps>((props, forwardedRef) => {\n  const { asChild, children, className, style, color, radius, ...imageProps } = extractProps(\n    props,\n    avatarPropDefs,\n    marginPropDefs\n  );\n\n  return (\n    // TODO as a rule, should we rather spread the props on root?\n    <AvatarPrimitive.Root\n      data-accent-color={color}\n      data-radius={radius}\n      className={classNames('rt-reset', 'rt-AvatarRoot', className)}\n      style={style}\n      asChild={asChild}\n    >\n      {getSubtree({ asChild, children }, <AvatarImpl ref={forwardedRef} {...imageProps} />)}\n    </AvatarPrimitive.Root>\n  );\n});\nAvatar.displayName = 'Avatar';\n\ntype AvatarImplElement = React.ElementRef<typeof AvatarPrimitive.Image>;\ntype AvatarOwnProps = GetPropDefTypes<typeof avatarPropDefs>;\n\ninterface AvatarImplProps\n  extends ComponentPropsWithout<typeof AvatarPrimitive.Image, RemovedProps>,\n    AvatarOwnProps {\n  // TODO: See if we can automate making prop defs with `required: true` non nullable\n  fallback: NonNullable<AvatarOwnProps['fallback']>;\n}\n\nconst AvatarImpl = React.forwardRef<AvatarImplElement, AvatarImplProps>(\n  ({ fallback, ...imageProps }, forwardedRef) => {\n    const [status, setStatus] = React.useState<'idle' | 'loading' | 'loaded' | 'error'>('idle');\n    return (\n      <>\n        {status === 'idle' || status === 'loading' ? <span className=\"rt-AvatarFallback\" /> : null}\n\n        {status === 'error' ? (\n          <AvatarPrimitive.Fallback\n            className={classNames('rt-AvatarFallback', {\n              'rt-one-letter': typeof fallback === 'string' && fallback.length === 1,\n              'rt-two-letters': typeof fallback === 'string' && fallback.length === 2,\n            })}\n            delayMs={0}\n          >\n            {fallback}\n          </AvatarPrimitive.Fallback>\n        ) : null}\n\n        <AvatarPrimitive.Image\n          ref={forwardedRef}\n          className=\"rt-AvatarImage\"\n          {...imageProps}\n          onLoadingStatusChange={(status) => {\n            imageProps.onLoadingStatusChange?.(status);\n            setStatus(status);\n          }}\n        />\n      </>\n    );\n  }\n);\n\nAvatarImpl.displayName = 'AvatarImpl';\n\nexport { Avatar };\nexport type { AvatarProps };\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/SearchForm.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/SearchForm.tsx\",\n    \"default\",\n);\n","import Preloader from \"@/components/Preloader\";\nimport SearchForm from \"@/components/SearchForm\";\nimport SearchResults from \"@/components/SearchResults\";\nimport { Suspense } from \"react\";\n\nexport default async function SearchPage({\n    searchParams: {query},\n}:{\n    searchParams: {query:string}\n}) {\n    return (\n        <div className=\"w-full\">\n            <div className=\"max-w-md mx-auto\">\n                <SearchForm />\n                {typeof query !== 'undefined' && (\n                    <Suspense fallback={<Preloader />}>\n                        <SearchResults query={query} />\n                    </Suspense>\n                )}\n            </div>\n        </div>\n    )\n}","import { prisma } from \"@/db\"\nimport { Avatar } from \"@radix-ui/themes\"\nimport Link from \"next/link\"\nimport PostsGrid from \"./PostsGrid\"\n\nexport default async function SearchResults({query}:{query:string}) {\n    const profiles = await prisma.profile.findMany({\n        where: {\n            OR: [\n                {username: {contains: query}},\n                {name: {contains: query}},\n            ]\n        },\n        take: 10,\n    })\n    const posts = await prisma.post.findMany({\n        where: {\n            description: {contains: query}\n        },\n        take: 100,\n    })\n    return (\n        <div>\n            <h1 className=\"text-lg mt-4\">\n                Search results for \"{query}\"\n            </h1>\n            {profiles?.length > 0 && (\n                <div className=\"grid mt-4 sm:grid-cols-2 gap-2\">\n                    {profiles.map(profile => (\n                        <Link\n                            key={profile.id} \n                            href={`/users/${profile.username}`} \n                            className=\"flex gap-2 bg-gray-200 border border-gray-300 p-2 rounded-full\"\n                        >\n                            <div className=\"\">\n                                <Avatar\n                                    size=\"4\"\n                                    radius=\"full\" \n                                    fallback=\"user avatar\" \n                                    src={profile.avatar || ''} \n                                />\n                            </div>\n                            <div>\n                                <h3>{profile.name}</h3>\n                                <h4 className=\"text-gray-500 text-sm\">\n                                    @{profile.username}\n                                </h4>\n                            </div>\n                        </Link>\n                    ))}\n                </div>\n            )}\n            <div className=\"mt-4\">\n                <PostsGrid posts={posts} />\n            </div>\n        </div>\n    )\n}"],"names":["React","classNames","AvatarPrimitive","avatarPropDefs","extractProps","getSubtree","marginPropDefs","Avatar","props","forwardedRef","asChild","children","className","style","color","radius","imageProps","AvatarImpl","fallback","status","setStatus"],"mappings":"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","ignoreList":[0,1,2,4]}