{"version":3,"sources":["turbopack:///[project]/src/components/PostsGrid.tsx","turbopack:///[project]/node_modules/react-masonry-css/dist/react-masonry-css.module.js"],"sourcesContent":["'use client'\nimport { Post } from '@prisma/client';\nimport Link from 'next/link';\nimport Masonry from 'react-masonry-css';\n\n\n\nexport default function PostsGrid({posts}:{posts:Post[]}) {\n    return (\n        <div className='max-w-4xl mx-auto'>\n            <Masonry\n                breakpointCols={{\n                    default: 4,\n                    860: 3,\n                    500: 2\n                }}\n                className=\"flex -ml-4\"\n                columnClassName=\"pl-4\">\n                {posts.map((post) => (\n                    <Link \n                        key={post.id} \n                        href={`/posts/${post.id}`}\n                        className=\"block mb-4\">\n                        <img src={post.image} alt=\"\" className='rounded-lg'/>\n                    </Link>\n                ))}\n            </Masonry>\n        </div>\n    )\n}","import React from 'react';\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nconst defaultProps = {\n  breakpointCols: undefined,\n  // optional, number or object { default: number, [key: number]: number }\n  className: undefined,\n  // required, string\n  columnClassName: undefined,\n  // optional, string\n  // Any React children. Typically an array of JSX items\n  children: undefined,\n  // Custom attributes, however it is advised against\n  // using these to prevent unintended issues and future conflicts\n  // ...any other attribute, will be added to the container\n  columnAttrs: undefined,\n  // object, added to the columns\n  // Deprecated props\n  // The column property is deprecated.\n  // It is an alias of the `columnAttrs` property\n  column: undefined\n};\nconst DEFAULT_COLUMNS = 2;\n\nclass Masonry extends React.Component {\n  constructor(props) {\n    super(props); // Correct scope for when methods are accessed externally\n\n    this.reCalculateColumnCount = this.reCalculateColumnCount.bind(this);\n    this.reCalculateColumnCountDebounce = this.reCalculateColumnCountDebounce.bind(this); // default state\n\n    let columnCount;\n\n    if (this.props.breakpointCols && this.props.breakpointCols.default) {\n      columnCount = this.props.breakpointCols.default;\n    } else {\n      columnCount = parseInt(this.props.breakpointCols) || DEFAULT_COLUMNS;\n    }\n\n    this.state = {\n      columnCount\n    };\n  }\n\n  componentDidMount() {\n    this.reCalculateColumnCount(); // window may not be available in some environments\n\n    if (window) {\n      window.addEventListener('resize', this.reCalculateColumnCountDebounce);\n    }\n  }\n\n  componentDidUpdate() {\n    this.reCalculateColumnCount();\n  }\n\n  componentWillUnmount() {\n    if (window) {\n      window.removeEventListener('resize', this.reCalculateColumnCountDebounce);\n    }\n  }\n\n  reCalculateColumnCountDebounce() {\n    if (!window || !window.requestAnimationFrame) {\n      // IE10+\n      this.reCalculateColumnCount();\n      return;\n    }\n\n    if (window.cancelAnimationFrame) {\n      // IE10+\n      window.cancelAnimationFrame(this._lastRecalculateAnimationFrame);\n    }\n\n    this._lastRecalculateAnimationFrame = window.requestAnimationFrame(() => {\n      this.reCalculateColumnCount();\n    });\n  }\n\n  reCalculateColumnCount() {\n    const windowWidth = window && window.innerWidth || Infinity;\n    let breakpointColsObject = this.props.breakpointCols; // Allow passing a single number to `breakpointCols` instead of an object\n\n    if (typeof breakpointColsObject !== 'object') {\n      breakpointColsObject = {\n        default: parseInt(breakpointColsObject) || DEFAULT_COLUMNS\n      };\n    }\n\n    let matchedBreakpoint = Infinity;\n    let columns = breakpointColsObject.default || DEFAULT_COLUMNS;\n\n    for (let breakpoint in breakpointColsObject) {\n      const optBreakpoint = parseInt(breakpoint);\n      const isCurrentBreakpoint = optBreakpoint > 0 && windowWidth <= optBreakpoint;\n\n      if (isCurrentBreakpoint && optBreakpoint < matchedBreakpoint) {\n        matchedBreakpoint = optBreakpoint;\n        columns = breakpointColsObject[breakpoint];\n      }\n    }\n\n    columns = Math.max(1, parseInt(columns) || 1);\n\n    if (this.state.columnCount !== columns) {\n      this.setState({\n        columnCount: columns\n      });\n    }\n  }\n\n  itemsInColumns() {\n    const currentColumnCount = this.state.columnCount;\n    const itemsInColumns = new Array(currentColumnCount); // Force children to be handled as an array\n\n    const items = React.Children.toArray(this.props.children);\n\n    for (let i = 0; i < items.length; i++) {\n      const columnIndex = i % currentColumnCount;\n\n      if (!itemsInColumns[columnIndex]) {\n        itemsInColumns[columnIndex] = [];\n      }\n\n      itemsInColumns[columnIndex].push(items[i]);\n    }\n\n    return itemsInColumns;\n  }\n\n  renderColumns() {\n    const {\n      column,\n      columnAttrs = {},\n      columnClassName\n    } = this.props;\n    const childrenInColumns = this.itemsInColumns();\n    const columnWidth = `${100 / childrenInColumns.length}%`;\n    let className = columnClassName;\n\n    if (className && typeof className !== 'string') {\n      this.logDeprecated('The property \"columnClassName\" requires a string'); // This is a deprecated default and will be removed soon.\n\n      if (typeof className === 'undefined') {\n        className = 'my-masonry-grid_column';\n      }\n    }\n\n    const columnAttributes = _objectSpread(_objectSpread(_objectSpread({}, column), columnAttrs), {}, {\n      style: _objectSpread(_objectSpread({}, columnAttrs.style), {}, {\n        width: columnWidth\n      }),\n      className\n    });\n\n    return childrenInColumns.map((items, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, columnAttributes, {\n        key: i\n      }), items);\n    });\n  }\n\n  logDeprecated(message) {\n    console.error('[Masonry]', message);\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      // ignored\n      children,\n      breakpointCols,\n      columnClassName,\n      columnAttrs,\n      column,\n      // used\n      className\n    } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"breakpointCols\", \"columnClassName\", \"columnAttrs\", \"column\", \"className\"]);\n\n    let classNameOutput = className;\n\n    if (typeof className !== 'string') {\n      this.logDeprecated('The property \"className\" requires a string'); // This is a deprecated default and will be removed soon.\n\n      if (typeof className === 'undefined') {\n        classNameOutput = 'my-masonry-grid';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n      className: classNameOutput\n    }), this.renderColumns());\n  }\n\n}\n\nMasonry.defaultProps = defaultProps;\n\nexport default Masonry;\n"],"names":[],"mappings":"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","ignoreList":[1]}