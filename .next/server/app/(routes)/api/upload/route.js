(()=>{var a={};a.id=969,a.ids=[969],a.modules={261:a=>{"use strict";a.exports=require("next/dist/shared/lib/router/utils/app-paths")},3295:a=>{"use strict";a.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},3421:(a,b,c)=>{"use strict";Object.defineProperty(b,"I",{enumerable:!0,get:function(){return g}});let d=c(71237),e=c(55088),f=c(17679);async function g(a,b,c,g){if((0,d.isNodeNextResponse)(b)){var h;b.statusCode=c.status,b.statusMessage=c.statusText;let d=["set-cookie","www-authenticate","proxy-authenticate","vary"];null==(h=c.headers)||h.forEach((a,c)=>{if("x-middleware-set-cookie"!==c.toLowerCase())if("set-cookie"===c.toLowerCase())for(let d of(0,f.splitCookiesString)(a))b.appendHeader(c,d);else{let e=void 0!==b.getHeader(c);(d.includes(c.toLowerCase())||!e)&&b.appendHeader(c,a)}});let{originalResponse:i}=b;c.body&&"HEAD"!==a.method?await (0,e.pipeToNodeResponse)(c.body,i,g):i.end()}}},10846:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},19121:a=>{"use strict";a.exports=require("next/dist/server/app-render/action-async-storage.external.js")},29294:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},63440:(a,b,c)=>{"use strict";c.r(b),c.d(b,{handler:()=>aY,patchFetch:()=>aX,routeModule:()=>aT,serverHooks:()=>aW,workAsyncStorage:()=>aU,workUnitAsyncStorage:()=>aV});var d={};c.r(d),c.d(d,{POST:()=>aS});var e=c(95736),f=c(9117),g=c(4044),h=c(39326),i=c(32324),j=c(261),k=c(54290),l=c(85328),m=c(38928),n=c(46595),o=c(3421),p=c(17679),q=c(41681),r=c(63446),s=c(86439),t=c(51356),u=c(10641),v=class extends Error{constructor(a,b,c){super(a),this.statusCode=b,this.details=c,this.name="PinataError"}},w=class extends v{constructor(a,b,c){super(a,b,c),this.name="NetworkError"}},x=class extends v{constructor(a,b,c){super(a,b,c),this.name="AuthenticationError"}},y=class extends v{constructor(a,b){super(a,void 0,b),this.name="ValidationError"}};function z(a){var b,c;return b=a=a.trim(),/^Qm[1-9A-HJ-NP-Za-km-z]{44}$/.test(b)||(c=a,/^b[a-z2-7]{58,}$/.test(c))}async function A(a){let b;if("string"!=typeof a)throw Error("Input is not a string");let c=a=>{let b=a.split("/");return z(b[0])?b[0]:null},d=c(a);if(d)return{containsCid:!0,cid:d};try{b=new URL(a)}catch(b){for(let b of a.split(/\/|\?/)){let a=c(b);if(a)return{containsCid:!0,cid:a}}return{containsCid:!1,cid:null}}for(let a of b.hostname.split("."))if(z(a))return{containsCid:!0,cid:a};for(let a of b.pathname.split("/")){let b=c(a);if(b)return{containsCid:!0,cid:b}}return{containsCid:!1,cid:null}}async function B(a,b){let c=await A(a);if(!0!==c.containsCid)throw Error("url does not contain CID");if(!a.startsWith("https")&&!a.startsWith("ipfs://"))return`${b}/ipfs/${a}`;let d=new URL(a),e=d.pathname+d.search+d.hash;if(a.startsWith(`ipfs://${c.cid}`))return`${b}/ipfs/${c.cid}${e}`;if(a.includes(`/ipfs/${c.cid}`)||a.includes(`/ipns/${c.cid}`))return`${b}${e}`;if(d.hostname.includes(c.cid))return`${b}/ipfs/${c.cid}${e}`;throw Error("unsupported URL pattern, please submit a github issue with the URL utilized")}var C=a=>{let b=a?.pinataGateway;return a&&b&&(b&&!b.startsWith("https://")&&(b=`https://${b}`),a.pinataGateway=b),a},D=async(a,b)=>{if(!a)throw new y("Pinata configuration is missing");let c=new URLSearchParams;if(b){let{cid:a,gateway_domain:d,start_date:e,end_date:f,file_name:g,user_agent:h,country:i,region:j,referer:k,limit:l,sort_order:m,date_interval:n,sort_by:o}=b;a&&c.append("cid",a),d&&c.append("gateway_domain",d),e&&c.append("start_date",e),f&&c.append("end_date",f),g&&c.append("file_name",g),h&&c.append("user_agent",h.toString()),i&&c.append("country",i.toString()),j&&c.append("region",j),k&&c.append("referer",k.toString()),l&&c.append("limit",l.toString()),m&&c.append("sort_order",m),o&&c.append("sort_by",o),n&&c.append("by",n)}let d="https://api.pinata.cloud/v3";a.endpointUrl&&(d=a.endpointUrl);let e=`${d}/ipfs/gateway_analytics_time_series?${c.toString()}`;try{let b;b=a.customHeaders&&Object.keys(a.customHeaders).length>0?{...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,Source:"sdk/analyticsDateInterval"};let c=await fetch(e,{method:"GET",headers:b});if(!c.ok){let a=await c.text();if(401===c.status||403===c.status)throw new x(`Authentication failed: ${a}`,c.status,{error:a,code:"AUTH_ERROR",metadata:{requestUrl:c.url}});throw new w(`HTTP error: ${a}`,c.status,{error:a,code:"HTTP_ERROR",metadata:{requestUrl:c.url}})}return(await c.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing anaytics usage: ${a.message}`);throw new v("An unknown error occurred while fetching gateway usage")}},E=async(a,b)=>{if(!a)throw new y("Pinata configuration is missing");let c=new URLSearchParams;if(b){let{cid:d,gateway_domain:e,start_date:f,end_date:g,file_name:h,user_agent:i,country:j,region:k,referer:l,limit:m,sort_order:n,sort_by:o,attribute:p}=b,q=e||a.pinataGateway;if(q){let a=q.replace(/^https?:\/\//,"");c.append("gateway_domain",a)}d&&c.append("cid",d),f&&c.append("start_date",f),g&&c.append("end_date",g),h&&c.append("file_name",h),i&&c.append("user_agent",i.toString()),j&&c.append("country",j.toString()),k&&c.append("region",k),l&&c.append("referer",l.toString()),m&&c.append("limit",m.toString()),n&&c.append("sort_order",n),o&&c.append("sort_by",o),p&&c.append("by",p)}let d="https://api.pinata.cloud/v3";a.endpointUrl&&(d=a.endpointUrl);let e=`${d}/ipfs/gateway_analytics_top?${c.toString()}`;try{let b;b=a.customHeaders&&Object.keys(a.customHeaders).length>0?{...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,Source:"sdk/analyticsTopUsage"};let c=await fetch(e,{method:"GET",headers:b});if(!c.ok){let a=await c.text();if(401===c.status||403===c.status)throw new x(`Authentication failed: ${a}`,c.status,{error:a,code:"AUTH_ERROR",metadata:{requestUrl:c.url}});throw new w(`HTTP error: ${a}`,c.status,{error:a,code:"HTTP_ERROR",metadata:{requestUrl:c.url}})}return await c.json()}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing anaytics usage: ${a.message}`);throw new v("An unknown error occurred while fetching gateway usage")}},F=async a=>{let b;if(!a)throw new y("Pinata configuration is missing");let c="https://api.pinata.cloud";a.endpointUrl&&(c=a.endpointUrl),b=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,Source:"sdk/testAuthentication"};try{let a=await fetch(`${c}/data/testAuthentication`,{method:"GET",headers:b});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return await a.json()}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing authentication: ${a.message}`);throw new v("An unknown error occurred while testing authentication")}},G=a=>new Promise(b=>{setTimeout(b,a)}),H=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");let e=[];d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,Source:"sdk/deleteFile"};let f="https://api.pinata.cloud/v3";for(let g of(a.endpointUrl&&(f=a.endpointUrl),b))try{let a=await fetch(`${f}/files/${c}/${g}`,{method:"DELETE",headers:d});if(await G(300),!a.ok){let b=await a.text();if(401===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}});throw new w("HTTP error",a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}e.push({id:g,status:a.statusText})}catch(b){let a;a=b instanceof v?b.message:b instanceof Error?`Error deleting file ${g}: ${b.message}`:`An unknown error occurred while deleting file ${g}`,e.push({id:g,status:a})}return e},I=async(a,b)=>{let c;if(!a)throw new y("Pinata configuration is missing");c=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,Source:"sdk/vectorizeFile"};let d="https://uploads.pinata.cloud/v3";a.uploadUrl&&(d=a.uploadUrl);try{let a=await fetch(`${d}/vectorize/files/${b}`,{method:"DELETE",headers:c});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return await a.json()}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing vectorize file: ${a.message}`);throw new v("An unknown error occurred while vectorizing file")}},J=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/deleteSwap"};let e="https://api.pinata.cloud/v3";a.endpointUrl&&(e=a.endpointUrl);try{let a=await fetch(`${e}/files/${c}/swap/${b}`,{method:"DELETE",headers:d});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x("Authentication failed",a.status,{error:b,code:"AUTH_ERROR"});if(403===a.status)throw new v("Unauthorized CID Swap Deletion",a.status,{error:b,code:"UNAUTHORIZED"});if(404===a.status)throw new v("CID not pinned to account",a.status,{error:b,code:"NOT_FOUND"});throw new w("HTTP error occurred",a.status,{error:b,code:"NETWORK_ERROR"})}return a.statusText}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing deleteSwap: ${a.message}`,void 0,{code:"DELETE_SWAP_ERROR"});throw new v("An unknown error occurred while deleting swap",void 0,{code:"UNKNOWN_ERROR"})}},K=async(a,b,c)=>{if(!a)throw new y("Pinata configuration is missing");let d=new URLSearchParams;if(c){let{name:a,group:b,cid:e,order:f,limit:g,mimeType:h,pageToken:i,cidPending:j,metadata:k,noGroup:l}=c;g&&d.append("limit",g.toString()),a&&d.append("name",a),b&&d.append("group",b),e&&d.append("cid",e),h&&d.append("mimeType",h),f&&d.append("order",f),i&&d.append("pageToken",i),j&&d.append("cidPending","true"),l&&d.append("group","null"),k&&"object"==typeof k&&Object.entries(k).forEach(([a,b])=>{d.append(`keyvalues[${a.toString()}]`,b.toString())})}let e="https://api.pinata.cloud/v3";a.endpointUrl&&(e=a.endpointUrl);let f=`${e}/files/${b}?${d.toString()}`;try{let b;b=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,Source:"sdk/listFiles"};let c=await fetch(f,{method:"GET",headers:b});if(!c.ok){let a=await c.text();if(401===c.status||403===c.status)throw new x(`Authentication failed: ${a}`,c.status,{error:a,code:"AUTH_ERROR",metadata:{requestUrl:c.url}});throw new w(`HTTP error: ${a}`,c.status,{error:a,code:"HTTP_ERROR",metadata:{requestUrl:c.url}})}return(await c.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing list files: ${a.message}`);throw new v("An unknown error occurred while listing files")}},L=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");let e=JSON.stringify({swap_cid:b.swapCid});d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/swapCid"};let f="https://api.pinata.cloud/v3";a.endpointUrl&&(f=a.endpointUrl);try{let a=await fetch(`${f}/files/${c}/swap/${b.cid}`,{method:"PUT",headers:d,body:e});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});if(403===a.status)throw new v("Unauthorized CID Swap",a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});if(404===a.status)throw new v("CID not pinned to account",a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing CID Swap: ${a.message}`);throw new v("An unknown error occurred while swapping CID")}},M=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/swapHistory"};let e="https://api.pinata.cloud/v3";a.endpointUrl&&(e=a.endpointUrl);try{let a=await fetch(`${e}/files/${c}/swap/${b.cid}?domain=${b.domain}`,{method:"GET",headers:d});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});if(404===a.status)throw new v("CID does not have history",a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error fetching swap history: ${a.message}`);throw new v("An unknown error occurred while fetching swap history")}},N=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");if(!b.name&&(!b.keyvalues||0===Object.keys(b.keyvalues).length))throw new y("At least one of 'name' or 'keyvalues' must be provided");let e={};void 0!==b.name&&(e.name=b.name),b.keyvalues&&Object.keys(b.keyvalues).length>0&&(e.keyvalues=b.keyvalues);let f=JSON.stringify(e);d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/updateMetadata"};let g="https://api.pinata.cloud/v3";a.endpointUrl&&(g=a.endpointUrl);try{let a=await fetch(`${g}/files/${c}/${b.id}`,{method:"PUT",headers:d,body:f});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing updateFile: ${a.message}`);throw new v("An unknown error occurred while updating file")}},O=async(a,b)=>{let c;if(!a)throw new y("Pinata configuration is missing");c=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,Source:"sdk/vectorizeFile"};let d="https://uploads.pinata.cloud/v3";a.uploadUrl&&(d=a.uploadUrl);try{let a=await fetch(`${d}/vectorize/files/${b}`,{method:"POST",headers:c});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return await a.json()}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing vectorize file: ${a.message}`);throw new v("An unknown error occurred while vectorizing file")}},P=async(a,b)=>{let c;if(!a)throw new y("Pinata configuration is missing");c=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,Source:"sdk/vectorQuery"};let d="https://uploads.pinata.cloud/v3";a.uploadUrl&&(d=a.uploadUrl);let e=JSON.stringify({text:b.query});try{let f=await fetch(`${d}/vectorize/groups/${b.groupId}/query`,{method:"POST",headers:c,body:e});if(!f.ok){let a=await f.text();if(401===f.status||403===f.status)throw new x(`Authentication failed: ${a}`,f.status,{error:a,code:"AUTH_ERROR",metadata:{requestUrl:f.url}});throw new w(`HTTP error: ${a}`,f.status,{error:a,code:"HTTP_ERROR",metadata:{requestUrl:f.url}})}let g=(await f.json()).data;if(b.returnFile){if(0===g.matches.length)throw new v("No files returned in query to fetch");let b=g.matches[0].cid;return await S(a,b,"files")}return g}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing vectorize file: ${a.message}`);throw new v("An unknown error occurred while vectorizing file")}},Q=async(a,b)=>{let c;if(!a)throw new y("Pinata configuration is missing");let d=new URLSearchParams({includesCount:"false"});if(b){let{cid:a,status:c,sort:e,limit:f,pageToken:g}=b;a&&d.append("cid",a.toString()),c&&d.append("status",c.toString()),e&&d.append("sort",e.toString()),f&&d.append("limit",f.toString()),g&&d.append("pageToken",g.toString())}let e="https://api.pinata.cloud/v3";a.endpointUrl&&(e=a.endpointUrl);let f=`${e}/files/public/pin_by_cid?${d.toString()}`;c=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,Source:"sdk/pinJobs"};try{let a=await fetch(f,{method:"GET",headers:c});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing pinJobs: ${a.message}`);throw new v("An unknown error occurred while listing pin jobs")}},R=async(a,b)=>{let c;if(!a)throw new y("Pinata configuration is missing");c=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,Source:"sdk/deletePinRequest"};let d="https://api.pinata.cloud/v3";a.endpointUrl&&(d=a.endpointUrl);try{let a=await fetch(`${d}/files/public/pin_by_cid/${b}`,{method:"DELETE",headers:c});if(!a.ok){let b=await a.text();if(401===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}});throw new w("HTTP error",a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return"OK"}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error deleting pin by request: ${a.message}`);throw new v("An unknown error occurred while deleting pin by CID request")}},S=async(a,b,c,d)=>{let e;if(!a)throw new y("Pinata configuration is missing");let f=`${a?.pinataGateway}/${c}/${b}`,g=new URLSearchParams;d&&(d.width&&g.append("img-width",d.width.toString()),d.height&&g.append("img-height",d.height.toString()),d.dpr&&g.append("img-dpr",d.dpr.toString()),d.fit&&g.append("img-fit",d.fit),d.gravity&&g.append("img-gravity",d.gravity),d.quality&&g.append("img-quality",d.quality.toString()),d.format&&g.append("img-format",d.format),void 0!==d.animation&&g.append("img-anim",d.animation.toString()),d.sharpen&&g.append("img-sharpen",d.sharpen.toString()),!0===d.onError&&g.append("img-onerror","redirect"),d.metadata&&g.append("img-metadata",d.metadata)),a?.pinataGatewayKey&&g.append("pinataGatewayToken",a.pinataGatewayKey);let h=g.toString();if(h&&(f+=`?${h}`),"ipfs"===c){let a=await fetch(f);if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication Failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}let b=a.headers.get("content-type")?.split(";")[0]||null;return{data:b?.includes("application/json")?await a.json():b?.includes("text/")?await a.text():await a.blob(),contentType:b}}let i=JSON.stringify({url:f,date:Math.floor(new Date().getTime()/1e3),expires:30,method:"GET"}),j="https://api.pinata.cloud/v3";a.endpointUrl&&(j=a.endpointUrl),e=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{"Content-Type":"application/json",Authorization:`Bearer ${a.pinataJwt}`,Source:"sdk/getCid"};let k=await fetch(`${j}/files/sign`,{method:"POST",headers:e,body:i}),l=await k.json();try{let a=await fetch(l.data);if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication Failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}let b=a.headers.get("content-type")?.split(";")[0]||null;return{data:b?.includes("application/json")?await a.json():b?.includes("text/")?await a.text():await a.blob(),contentType:b}}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing getCid: ${a.message}`);throw new v("An unknown error occurred while getting CID contents")}},T=async(a,b,c)=>{let d,e=c||a?.pinataGateway||"https://gateway.pinata.cloud";return d=await B(b,e),a?.pinataGatewayKey&&a?.pinataGatewayKey,d},U=async(a,b,c)=>{let d,e;if(!a)throw new y("Pinata configuration is missing");d=b?.gateway?b.gateway.startsWith("https://")?b.gateway:`https://${b.gateway}`:a.pinataGateway;let f=`${d}/files/${b.cid}`,g=new URLSearchParams;c&&(c.width&&g.append("img-width",c.width.toString()),c.height&&g.append("img-height",c.height.toString()),c.dpr&&g.append("img-dpr",c.dpr.toString()),c.fit&&g.append("img-fit",c.fit),c.gravity&&g.append("img-gravity",c.gravity),c.quality&&g.append("img-quality",c.quality.toString()),c.format&&g.append("img-format",c.format),void 0!==c.animation&&g.append("img-anim",c.animation.toString()),c.sharpen&&g.append("img-sharpen",c.sharpen.toString()),!0===c.onError&&g.append("img-onerror","redirect"),c.metadata&&g.append("img-metadata",c.metadata));let h=g.toString();h&&(f+=`?${h}`);let i=JSON.stringify({url:f,date:b?.date||Math.floor(new Date().getTime()/1e3),expires:b.expires,method:"GET"}),j="https://api.pinata.cloud/v3";a.endpointUrl&&(j=a.endpointUrl),e=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{"Content-Type":"application/json",Authorization:`Bearer ${a.pinataJwt}`,Source:"sdk/createSignURL"};try{let a=await fetch(`${j}/files/private/download_link`,{method:"POST",headers:e,body:i});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication Failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing createSignedURL: ${a.message}`);throw new v("An unknown error occurred while getting signed url")}},V=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");let e=a=>new Promise(b=>{setTimeout(b,a)}),f=[];d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/addToGroup"};let g="https://api.pinata.cloud/v3";for(let h of(a.endpointUrl&&(g=a.endpointUrl),b.files))try{let a=await fetch(`${g}/groups/${c}/${b.groupId}/ids/${h}`,{method:"PUT",headers:d});if(await e(300),!a.ok){let b=await a.text();if(401===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}f.push({id:h,status:a.statusText})}catch(b){let a;a=b instanceof v?b.message:b instanceof Error?`Error adding file ${h} to group: ${b.message}`:`An unknown error occurred while adding file ${h} to group`,f.push({id:h,status:a})}return f},W=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");let e=JSON.stringify({name:b.name,is_public:b.isPublic});d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/createGroup"};let f="https://api.pinata.cloud/v3";a.endpointUrl&&(f=a.endpointUrl);try{let a=await fetch(`${f}/groups/${c}`,{method:"POST",headers:d,body:e});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing createGroup: ${a.message}`);throw new v("An unknown error occurred while creating a group")}},X=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/deleteGroup"};let e="https://api.pinata.cloud/v3";a.endpointUrl&&(e=a.endpointUrl);try{let a=await fetch(`${e}/groups/${c}/${b.groupId}`,{method:"DELETE",headers:d});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return a.statusText}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing deleteGroup: ${a.message}`);throw new v("An unknown error occurred while deleting a group")}},Y=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/getGroup"};let e="https://api.pinata.cloud/v3";a.endpointUrl&&(e=a.endpointUrl);try{let a=await fetch(`${e}/groups/${c}/${b.groupId}`,{method:"GET",headers:d});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing getGroup: ${a.message}`);throw new v("An unknown error occurred while getting info for a group")}},Z=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/listGroups"};let e=new URLSearchParams;if(c){let{pageToken:a,name:b,limit:d,isPublic:f}=c;a&&e.append("pageToken",a.toString()),f&&e.append("isPublic",f.toString()),b&&e.append("name",b),void 0!==d&&e.append("limit",d.toString())}let f="https://api.pinata.cloud/v3";a.endpointUrl&&(f=a.endpointUrl);try{let a=await fetch(`${f}/groups/${b}?${e.toString()}`,{method:"GET",headers:d});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing listGroups: ${a.message}`);throw new v("An unknown error occurred while listing groups")}},$=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");let e=a=>new Promise(b=>{setTimeout(b,a)}),f=[];d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/addToGroup"};let g="https://api.pinata.cloud/v3";for(let h of(a.endpointUrl&&(g=a.endpointUrl),b.files))try{let a=await fetch(`${g}/groups/${c}/${b.groupId}/ids/${h}`,{method:"DELETE",headers:d});if(await e(300),!a.ok){let b=await a.text();if(401===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}f.push({id:h,status:a.statusText})}catch(b){let a;a=b instanceof v?b.message:b instanceof Error?`Error adding file ${h} to group: ${b.message}`:`An unknown error occurred while adding file ${h} to group`,f.push({id:h,status:a})}return f},_=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");let e=JSON.stringify({name:b.name,is_public:b.isPublic});d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/updateGroup"};let f="https://api.pinata.cloud/v3";a.endpointUrl&&(f=a.endpointUrl);try{let a=await fetch(`${f}/groups/${c}/${b.groupId}`,{method:"PUT",headers:d,body:e});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing updateGroup: ${a.message}`);throw new v("An unknown error occurred while updating group")}},aa=async(a,b)=>{let c;if(!a)throw new y("Pinata configuration is missing");c=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/createKey"};let d=JSON.stringify(b),e="https://api.pinata.cloud/v3";a.endpointUrl&&(e=a.endpointUrl);try{let a=await fetch(`${e}/pinata/keys`,{method:"POST",headers:c,body:d});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return await a.json()}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing createKey: ${a.message}`);throw new v("An unknown error occurred while creating API key")}},ab=async(a,b)=>{let c;if(!a)throw new y("Pinata configuration is missing");c=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/listKeys"};let d=new URLSearchParams;if(b){let{offset:a,name:c,revoked:e,limitedUse:f,exhausted:g}=b;a&&d.append("offset",a.toString()),void 0!==e&&d.append("revoked",e.toString()),void 0!==f&&d.append("limitedUse",f.toString()),void 0!==g&&d.append("exhausted",g.toString()),c&&d.append("name",c)}let e="https://api.pinata.cloud/v3";a.endpointUrl&&(e=a.endpointUrl);try{let a=await fetch(`${e}/pinata/keys?${d.toString()}`,{method:"GET",headers:c});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).keys}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing listKeys: ${a.message}`);throw new v("An unknown error occurred while listing API keys")}},ac=a=>new Promise(b=>{setTimeout(b,a)}),ad=async(a,b)=>{let c;if(!a)throw new y("Pinata configuration is missing");a.customHeaders&&Object.keys(a.customHeaders).length>0?(c={Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders},c={...a.customHeaders}):c={Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/revokeKeys"};let d=[],e="https://api.pinata.cloud/v3";for(let f of(a.endpointUrl&&(e=a.endpointUrl),b))try{let a=await fetch(`${e}/pinata/keys/${f}`,{method:"PUT",headers:c});if(await ac(300),!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}let b=await a.json();d.push({key:f,status:b})}catch(b){let a;a=b instanceof v?b.message:b instanceof Error?`Error revoking key ${f}: ${b.message}`:`An unknown error occurred while revoking key ${f}`,d.push({key:f,status:a})}return d},ae=async(a,b,c,d)=>{let e;if(!a)throw new y("Pinata configuration is missing");let f=d?.keys||a?.pinataJwt,g=d?.metadata?.name?d?.metadata?.name:"base64 string",h=new Blob([Buffer.from(b,"base64")]),i=new FormData;i.append("file",h,g),i.append("network",c),i.append("name",g),d?.groupId&&i.append("group_id",d.groupId),d?.metadata?.keyvalues&&i.append("keyvalues",JSON.stringify(d.metadata.keyvalues)),e=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${f}`,...a.customHeaders}:{Authorization:`Bearer ${f}`,Source:"sdk/base64"};let j="https://uploads.pinata.cloud/v3";if(a.uploadUrl&&(j=a.uploadUrl),d?.url)try{let a=await fetch(d.url,{method:"POST",body:i});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing base64: ${a.message}`);throw new v("An unknown error occurred while trying to upload base64")}try{let a=await fetch(`${j}/files`,{method:"POST",headers:e,body:i});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}let b=(await a.json()).data;if(d?.vectorize){let c=await fetch(`${j}/vectorize/files/${b.id}`,{method:"POST",headers:{Authorization:`Bearer ${f}`}});if(c.ok)b.vectorized=!0;else{let b=await c.text();throw new w(`HTTP error during vectorization: ${b}`,c.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}}return b}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing base64: ${a.message}`);throw new v("An unknown error occurred while trying to upload base64")}},af=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");let e={date:b?.date||Math.floor(new Date().getTime()/1e3),expires:b.expires};b.groupId&&(e.group_id=b.groupId),b.name&&(e.filename=b.name),b.keyvalues&&(e.keyvalues=b.keyvalues),c&&(e.network=c),b.streamable&&(e.streamable=b.streamable),b.maxFileSize&&(e.max_file_size=b.maxFileSize),b.mimeTypes&&(e.allow_mime_types=b.mimeTypes);let f="https://uploads.pinata.cloud/v3";a.uploadUrl&&(f=a.uploadUrl),d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{"Content-Type":"application/json",Authorization:`Bearer ${a.pinataJwt}`,Source:"sdk/createSignURL"};let g=0;for(;g<=3;)try{let a=await fetch(`${f}/files/sign`,{method:"POST",headers:d,cache:"no-store",body:JSON.stringify(e)});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication Failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});let c=new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}});throw a.status>=400&&a.status<500&&a.status,c}return(await a.json()).data}catch(b){if(b instanceof x||b instanceof w&&b.statusCode&&b.statusCode>=400&&b.statusCode<500&&429!==b.statusCode)throw b;if(++g>3){if(b instanceof v)throw b;if(b instanceof Error)throw new v(`Error processing createSignedURL after 3 retries: ${b.message}`);throw new v("An unknown error occurred while getting signed url after 3 retries")}let a=Math.min(1e3*Math.pow(2,g-1),4e3);await new Promise(b=>setTimeout(b,a))}return Promise.reject(new v("Unexpected error: retry loop completed without resolution"))},ag=async(a,b,c,d)=>{let e;if(!a)throw new y("Pinata configuration is missing");let f=d?.keys||a.pinataJwt,g="https://uploads.pinata.cloud/v3";if(a.uploadUrl&&(g=a.uploadUrl),b.size>0x5a00000){let e,h;e=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${f}`,...a.customHeaders}:{Authorization:`Bearer ${f}`,Source:"sdk/file"};let i=d?.metadata?.name||b.name||"File from SDK",j=`filename ${btoa(i)},filetype ${btoa(b.type)},network ${btoa(c)}`;d?.groupId&&(j+=`,group_id ${btoa(d.groupId)}`),d?.metadata?.keyvalues&&(j+=`,keyvalues ${btoa(JSON.stringify(d.metadata.keyvalues))}`),d?.streamable&&(j+=`,streamable ${btoa("true")}`);let k=`${g}/files`;d?.url&&(k=d.url);let l=await fetch(k,{method:"POST",headers:{"Upload-Length":`${b.size}`,"Upload-Metadata":j,...e}}),m=l.headers.get("Location");if(!m){let a=await l.text();throw new w("Upload URL not provided",l.status,{error:a,code:"HTTP_ERROR",metadata:{requestUrl:l.url,requestHeaders:l.headers}})}let n=Math.ceil(b.size/0x3200001),o=0;for(let a=0;a<n;a++){let a=b.slice(o,o+0x3200001),c=0;for(;c<=5;)try{if((h=await fetch(m,{method:"PATCH",headers:{"Content-Type":"application/offset+octet-stream","Upload-Offset":o.toString(),...e},body:a})).ok)break;{let a=await h.text();throw Error(`HTTP ${h.status}: ${a}`)}}catch(b){if(++c>5){let a=h?await h.text().catch(()=>"Unknown error"):b instanceof Error?b.message:String(b);throw new w(`HTTP error during chunk upload after 5 retries: ${a}`,h?.status||0,{error:a,code:"HTTP_ERROR",metadata:{requestUrl:h?.url||m,retriesAttempted:5}})}let a=Math.min(1e3*Math.pow(2,c-1),1e4);await new Promise(b=>setTimeout(b,a))}o+=a.size}if(204===h.status){let e,i=h.headers.get("upload-cid");if(!a.pinataJwt)return{id:"",name:"",cid:i,size:b.size,created_at:"",number_of_files:1,group_id:null,mime_type:"",keyvalues:{},vectorized:!1,network:""};e=a.endpointUrl?a.endpointUrl:"https://api.pinata.cloud/v3";let j=await fetch(`${e}/files/${c}?cid=${i}`,{method:"GET",headers:{Authorization:`Bearer ${f}`}}),k=(await j.json()).data.files[0];if(d?.vectorize){let a=await fetch(`${g}/vectorize/files/${k.id}`,{method:"POST",headers:{Authorization:`Bearer ${f}`}});if(a.ok)k.vectorized=!0;else{let b=await a.text();throw new w(`HTTP error during vectorization: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}}return k}}e=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${f}`,...a.customHeaders}:{Authorization:`Bearer ${f}`,Source:"sdk/file"};let h=new FormData;if(h.append("file",b,b.name),h.append("network",c),h.append("name",d?.metadata?.name||b.name||"File from SDK"),d?.groupId&&h.append("group_id",d.groupId),d?.metadata?.keyvalues&&h.append("keyvalues",JSON.stringify(d.metadata.keyvalues)),d?.streamable&&h.append("streamable","true"),d?.url)try{let a=await fetch(d.url,{method:"POST",headers:e,body:h});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error uploading file: ${a.message}`,void 0,{error:a.toString()});throw new v("An unknown error occurred while trying to upload file")}try{let a=await fetch(`${g}/files`,{method:"POST",headers:e,body:h});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}let b=(await a.json()).data;if(d?.vectorize){let c=await fetch(`${g}/vectorize/files/${b.id}`,{method:"POST",headers:{Authorization:`Bearer ${f}`}});if(c.ok)b.vectorized=!0;else{let b=await c.text();throw new w(`HTTP error during vectorization: ${b}`,c.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}}return b}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error uploading file: ${a.message}`,void 0,{error:a.toString()});throw new v("An unknown error occurred while trying to upload file")}},ah=async(a,b,c,d)=>{let e;if(!a)throw new y("Pinata configuration is missing");let f=d?.keys||a?.pinataJwt,g=d?.metadata?.name||"folder_from_sdk",h=new FormData;for(let a of Array.from(b)){let b=a.webkitRelativePath||`${g}/${a.name}`;h.append("file",a,b)}h.append("pinataMetadata",JSON.stringify({name:g,keyvalues:d?.metadata?.keyvalues})),h.append("pinataOptions",JSON.stringify({groupId:d?.groupId,cidVersion:1})),e=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${f}`,...a.customHeaders}:{Authorization:`Bearer ${f}`,Source:"sdk/fileArray"};let i="https://api.pinata.cloud/pinning/pinFileToIPFS";a.legacyUploadUrl&&(i=a.legacyUploadUrl);try{let a=await fetch(`${i}`,{method:"POST",headers:e,body:h});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}let b=await a.json();return{id:b.ID,name:b.Name,cid:b.IpfsHash,size:b.PinSize,created_at:b.Timestamp,number_of_files:b.NumberOfFiles,mime_type:b.MimeType,group_id:b.GroupId,keyvalues:b.Keyvalues,vectorized:!1,network:"public"}}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing fileArray: ${a.message}`);throw new v("An unknown error occurred while uploading an array of files")}},ai=async(a,b,c,d)=>{let e;if(!a)throw new y("Pinata configuration is missing");let f=d?.keys||a?.pinataJwt,g=new File([new Blob([JSON.stringify(b)])],"data.json",{type:"application/json"}),h=new FormData;h.append("file",g,g.name),h.append("network",c),h.append("name",d?.metadata?.name||g.name||"File from SDK"),d?.groupId&&h.append("group_id",d.groupId),d?.metadata?.keyvalues&&h.append("keyvalues",JSON.stringify(d.metadata.keyvalues)),e=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${f}`,...a.customHeaders}:{Authorization:`Bearer ${f}`,Source:"sdk/json"};let i="https://uploads.pinata.cloud/v3";if(a.uploadUrl&&(i=a.uploadUrl),d?.url)try{let a=await fetch(d.url,{method:"POST",body:h});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing base64: ${a.message}`);throw new v("An unknown error occurred while trying to upload base64")}try{let a=await fetch(`${i}/files`,{method:"POST",headers:e,body:h});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}let b=(await a.json()).data;if(d?.vectorize){let c=await fetch(`${i}/vectorize/files/${b.id}`,{method:"POST",headers:{Authorization:`Bearer ${f}`}});if(c.ok)b.vectorized=!0;else{let b=await c.text();throw new w(`HTTP error during vectorization: ${b}`,c.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}}return b}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing json: ${a.message}`);throw new v("An unknown error occurred while uploading json")}},aj=async(a,b,c,d)=>{let e;if(!a)throw new y("Pinata configuration is missing");let f=d?.keys||a?.pinataJwt,g=new FormData,h=await fetch(b);if(!h.ok){let a=await h.text();throw new w(`HTTP error: ${a}`,h.status,{error:a,code:"HTTP_ERROR",metadata:{requestUrl:h.url}})}let i=new Blob([await h.arrayBuffer()]),j=d?.metadata?.name??"url_upload",k=new File([i],j);g.append("file",k,j),g.append("network",c),g.append("name",j),d?.groupId&&g.append("group_id",d.groupId),d?.metadata?.keyvalues&&g.append("keyvalues",JSON.stringify(d.metadata.keyvalues)),e=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${f}`,...a.customHeaders}:{Authorization:`Bearer ${f}`,Source:"sdk/url"};let l="https://uploads.pinata.cloud/v3";if(a.uploadUrl&&(l=a.uploadUrl),d?.url)try{let a=await fetch(d.url,{method:"POST",body:g});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing base64: ${a.message}`);throw new v("An unknown error occurred while trying to upload base64")}try{let a=await fetch(`${l}/files`,{method:"POST",headers:e,body:g});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}let b=(await a.json()).data;if(d?.vectorize){let c=await fetch(`${l}/vectorize/files/${b.id}`,{method:"POST",headers:{Authorization:`Bearer ${f}`}});if(c.ok)b.vectorized=!0;else{let b=await c.text();throw new w(`HTTP error during vectorization: ${b}`,c.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}}return b}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing url: ${a.message}`);throw new v("An unknown error occurred while uploading by url")}},ak=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");let e=c?.keys||a?.pinataJwt;d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${e}`,"Content-Type":"application/json",...a.customHeaders}:{Authorization:`Bearer ${e}`,"Content-Type":"application/json",Source:"sdk/cid"};let f=JSON.stringify({cid:b,name:c?.metadata?c?.metadata?.name:b,keyvalues:c?.metadata?.keyvalues,group_id:c?.groupId,host_nodes:c?.peerAddresses}),g="https://api.pinata.cloud/v3";a.endpointUrl&&(g=a.endpointUrl);try{let a=await fetch(`${g}/files/public/pin_by_cid`,{method:"POST",headers:d,body:f});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing cid: ${a.message}`);throw new v("An unknown error occurred while pinning by CID")}},al=class{constructor(a){this.config=C(a),this.requests=new ap(this.config),this.bandwidth=new an(this.config)}updateConfig(a){this.config=a,this.requests.updateConfig(a),this.bandwidth.updateConfig(a)}summary(a){return new aq(this.config,a.domain,a.start,a.end,a.interval)}},am=class{constructor(a,b,c,d){this.config=a,this.query={gateway_domain:b,start_date:c,end_date:d,sort_by:"requests",attribute:"cid"}}cid(a){return this.query.attribute="cid",a&&(this.query.cid=a),this}fileName(a){return this.query.attribute="file_name",a&&(this.query.file_name=a),this}userAgent(a){return this.query.attribute="user_agent",a&&(this.query.user_agent=a),this}country(a){return this.query.attribute="country",a&&(this.query.country=a),this}region(a){return this.query.attribute="region",a&&(this.query.region=a),this}referer(a){return this.query.attribute="referer",a&&(this.query.referer=a),this}limit(a){return this.query.limit=a,this}sort(a){return this.query.sort_order=a,this}days(a){let{start:b,end:c}=(a=>{let b=new Date,c=new Date;return c.setDate(c.getDate()-a),{start:c.toISOString().split("T")[0],end:b.toISOString().split("T")[0]}})(a);return this.query.start_date=b,this.query.end_date=c,this}then(a,b){return E(this.config,this.query).then(a,b)}},an=class extends am{constructor(a){super(a,"","",""),this.query.sort_by="bandwidth"}updateConfig(a){this.config=a}customDates(a,b){return a&&(this.query.start_date=a),b&&(this.query.end_date=b),this}from(a){return this.query.gateway_domain=a,this}},ao=class{constructor(a,b){this.requestCount=0,this.lastRequestTime=0,this.MAX_REQUESTS_PER_MINUTE=30,this.MINUTE_IN_MS=6e4,this.config=a,this.query=b}cid(a){return this.query.cid=a,this}fileName(a){return this.query.file_name=a,this}userAgent(a){return this.query.user_agent=a,this}country(a){return this.query.country=a,this}region(a){return this.query.region=a,this}referer(a){return this.query.referer=a,this}limit(a){return this.query.limit=a,this}sort(a){return this.query.sort_order=a,this}async getAnalytics(){throw Error("getAnalytics method must be implemented in derived class")}then(a,b){return this.getAnalytics().then(a,b)}},ap=class extends am{constructor(a){super(a,"","",""),this.query.sort_by="requests"}updateConfig(a){this.config=a}customDates(a,b){return a&&(this.query.start_date=a),b&&(this.query.end_date=b),this}from(a){return this.query.gateway_domain=a,this}},aq=class extends ao{constructor(a,b,c,d,e){super(a,{gateway_domain:b,start_date:c,end_date:d,date_interval:e})}sortBy(a){return this.query.sort_by=a,this}async getAnalytics(){return D(this.config,this.query)}async all(){return this.getAnalytics()}},ar=class{constructor(a,b){this.query={},this.config=a,this.privacy=b}name(a){return this.query.name=a,this}limit(a){return this.query.limit=a,this}isPublic(a){return this.query.isPublic=a,this}pageToken(a){return this.query.pageToken=a,this}then(a,b){return this.fetchPage().then(a=>(this.nextPageToken=a.next_page_token,a)).then(a,b)}async fetchPage(){return this.nextPageToken&&(this.query.pageToken=this.nextPageToken),Z(this.config,this.privacy,this.query)}async *[Symbol.asyncIterator](){for(;;){let a=await this.fetchPage();for(let b of a.groups)yield b;if(!a.next_page_token)break;this.nextPageToken=a.next_page_token}}async all(){let a=[];for await(let b of this)a.push(b);return a}},as=class{constructor(a){this.config=C(a)}updateConfig(a){this.config=a}create(a){return W(this.config,a,"public")}list(){return new ar(this.config,"public")}get(a){return Y(this.config,a,"public")}addFiles(a){return V(this.config,a,"public")}removeFiles(a){return $(this.config,a,"public")}update(a){return _(this.config,a,"public")}delete(a){return X(this.config,a,"public")}},at=class{constructor(a){this.config=C(a)}updateConfig(a){this.config=a}create(a){return W(this.config,a,"private")}list(){return new ar(this.config,"private")}get(a){return Y(this.config,a,"private")}addFiles(a){return V(this.config,a,"private")}removeFiles(a){return $(this.config,a,"private")}update(a){return _(this.config,a,"private")}delete(a){return X(this.config,a,"private")}},au=class{constructor(a){this.config=C(a),this.public=new as(a),this.private=new at(a)}updateConfig(a){this.config=a}},av=class{constructor(a){this.config=C(a)}updateConfig(a){this.config=a}create(a){return aa(this.config,a)}list(){return new aw(this.config)}revoke(a){return ad(this.config,a)}},aw=class{constructor(a){this.query={},this.config=a}offset(a){return this.query.offset=a,this}revoked(a){return this.query.revoked=a,this}limitedUse(a){return this.query.limitedUse=a,this}exhausted(a){return this.query.exhausted=a,this}name(a){return this.query.name=a,this}then(a,b){return ab(this.config,this.query).then(a,b)}async *[Symbol.asyncIterator](){let a=!0,b=0;for(;a;){this.query.offset=b;let c=await ab(this.config,this.query);for(let a of c)yield a;0===c.length?a=!1:b+=c.length}}async all(){let a=[];for await(let b of this)a.push(b);return a}},ax=class{constructor(a){this.config=C(a),this.public=new aB(a),this.private=new aA(a)}updateConfig(a){this.config=a}},ay=class{constructor(a,b){this.imgOpts={},this.config=a,this.urlOpts=b}optimizeImage(a){return this.imgOpts={...this.imgOpts,...a},this}then(a,b){return U(this.config,this.urlOpts,this.imgOpts).then(a,b)}},az=class{constructor(a,b,c){this.options={},this.config=a,this.cid=b,this.gatewayType=c}optimizeImage(a){return this.options={...this.options,...a},this}then(a,b){return S(this.config,this.cid,this.gatewayType,this.options).then(a,b)}},aA=class{constructor(a){this.config=a}get(a){return new az(this.config,a,"files")}createAccessLink(a){return new ay(this.config,a)}},aB=class{constructor(a){this.config=a}get(a){return new az(this.config,a,"ipfs")}convert(a,b){return T(this.config,a,b)}},aC=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/getFile"};let e="https://api.pinata.cloud/v3";a.endpointUrl&&(e=a.endpointUrl);try{let a=await fetch(`${e}/files/${c}/${b}`,{method:"GET",headers:d});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing getGroup: ${a.message}`);throw new v("An unknown error occurred while getting info for a group")}},aD=class{constructor(a,b){this.query={},this.config=a,this.privacy=b}name(a){return this.query.name=a,this}group(a){return this.query.group=a,this}cid(a){return this.query.cid=a,this}mimeType(a){return this.query.mimeType=a,this}order(a){return this.query.order=a,this}limit(a){return this.query.limit=a,this}cidPending(a){return this.query.cidPending=a,this}keyvalues(a){return this.query.metadata=a,this}noGroup(a){return this.query.noGroup=a,this}pageToken(a){return this.query.pageToken=a,this}then(a,b){return this.fetchPage().then(a,b)}async fetchPage(){this.currentPageToken&&(this.query.pageToken=this.currentPageToken);let a=await K(this.config,this.privacy,this.query);return this.currentPageToken=a.next_page_token,a}async *[Symbol.asyncIterator](){for(;;){for(let a of(await this.fetchPage()).files)yield a;if(!this.currentPageToken)break}}async all(){let a=[];for await(let b of this)a.push(b);return a}},aE=class{constructor(a){this.query={},this.requestCount=0,this.lastRequestTime=0,this.MAX_REQUESTS_PER_MINUTE=30,this.MINUTE_IN_MS=6e4,this.config=a}cid(a){return this.query.cid=a,this}status(a){return this.query.status=a,this}pageLimit(a){return this.query.limit=a,this}pageToken(a){return this.query.pageToken=a,this}async fetchPage(){this.currentPageToken&&(this.query.pageToken=this.currentPageToken);let a=await Q(this.config,this.query);return this.currentPageToken=a.next_page_token,a}sort(a){return this.query.sort=a,this}then(a,b){return Q(this.config,this.query).then(a,b)}async rateLimit(){this.requestCount++;let a=Date.now();if(this.requestCount>=this.MAX_REQUESTS_PER_MINUTE){let b=a-this.lastRequestTime;if(b<this.MINUTE_IN_MS){let a=this.MINUTE_IN_MS-b;await new Promise(b=>setTimeout(b,a))}this.requestCount=0}this.lastRequestTime=Date.now()}async *[Symbol.asyncIterator](){for(;;){for(let a of(await this.fetchPage()).jobs)yield a;if(!this.currentPageToken)break}}async all(){let a=[];for await(let b of this)a.push(b);return a}},aF=class{constructor(a){this.config=C(a)}list(){return new aD(this.config,"public")}get(a){return aC(this.config,a,"public")}delete(a){return H(this.config,a,"public")}update(a){return N(this.config,a,"public")}addSwap(a){return L(this.config,a,"public")}getSwapHistory(a){return M(this.config,a,"public")}deleteSwap(a){return J(this.config,a,"public")}queue(){return new aE(this.config)}deletePinRequest(a){return R(this.config,a)}},aG=class{constructor(a){this.config=C(a)}list(){return new aD(this.config,"private")}get(a){return aC(this.config,a,"private")}delete(a){return H(this.config,a,"private")}update(a){return N(this.config,a,"private")}addSwap(a){return L(this.config,a,"private")}getSwapHistory(a){return M(this.config,a,"private")}deleteSwap(a){return J(this.config,a,"private")}vectorize(a){return O(this.config,a)}queryVectors(a){return P(this.config,a)}deleteVectors(a){return I(this.config,a)}},aH=class{constructor(a){this.config=C(a),this.public=new aF(a),this.private=new aG(a)}updateConfig(a){this.config=a}},aI=class{constructor(a,b,...c){this.metadata={},this.config=a,this.uploadFunction=b,this.args=c}name(a){return this.metadata||(this.metadata={}),this.metadata.name=a,this}keyvalues(a){return this.metadata||(this.metadata={}),this.metadata.keyvalues=a,this}key(a){return this.keys=a,this}vectorize(){return this.vector=!0,this}url(a){return this.uploadUrl=a,this}group(a){return this.groupId=a,this}streamable(){return this.isStreamable=!0,this}peerAddress(a){return this.peerAddresses=a,this}then(a,b){let c=this.args[this.args.length-1]||{};return this.metadata&&(c.metadata=this.metadata),this.keys&&(c.keys=this.keys),this.groupId&&(c.groupId=this.groupId),this.vector&&(c.vectorize=this.vector),this.uploadUrl&&(c.url=this.uploadUrl),this.isStreamable&&(c.streamable=this.isStreamable),this.peerAddresses&&(c.peerAddresses=this.peerAddresses),this.args[this.args.length-1]=c,this.uploadFunction(this.config,...this.args).then(a,b)}},aJ=class{constructor(a){this.config=C(a)}updateConfig(a){this.config=a}file(a,b){return new aI(this.config,(a,b,c)=>ag(a,b,"public",c),a,b)}fileArray(a,b){return new aI(this.config,(a,b,c)=>ah(a,b,"public",c),a,b)}base64(a,b){return new aI(this.config,(a,b,c)=>ae(a,b,"public",c),a,b)}url(a,b){return new aI(this.config,(a,b,c)=>aj(a,b,"public",c),a,b)}json(a,b){return new aI(this.config,(a,b,c)=>ai(a,b,"public",c),a,b)}cid(a,b){return new aI(this.config,(a,b,c)=>ak(a,b,c),a,b)}createSignedURL(a){return af(this.config,a,"public")}},aK=class{constructor(a){this.config=C(a)}updateConfig(a){this.config=a}file(a,b){return new aI(this.config,(a,b,c)=>ag(a,b,"private",c),a,b)}base64(a,b){return new aI(this.config,(a,b,c)=>ae(a,b,"private",c),a,b)}url(a,b){return new aI(this.config,(a,b,c)=>aj(a,b,"private",c),a,b)}json(a,b){return new aI(this.config,(a,b,c)=>ai(a,b,"private",c),a,b)}createSignedURL(a){return af(this.config,a,"private")}},aL=class{constructor(a){this.config=C(a),this.public=new aJ(a),this.private=new aK(a)}updateConfig(a){this.config=a}},aM=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");let e=JSON.stringify({signature:b.signature,address:b.address});d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/addSignature"};let f="https://api.pinata.cloud/v3";a.endpointUrl&&(f=a.endpointUrl);try{let a=await fetch(`${f}/files/${c}/signature/${b.cid}`,{method:"POST",headers:d,body:e});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});if(403===a.status)throw new v("Unauthorized signing, you must be the original owner of the file and it must not have a signature",a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing addSignature: ${a.message}`);throw new v("An unknown error occurred while adding signature to CID")}},aN=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/getSignature"};let e="https://api.pinata.cloud/v3";a.endpointUrl&&(e=a.endpointUrl);try{let a=await fetch(`${e}/files/${c}/signature/${b}`,{method:"GET",headers:d});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return(await a.json()).data}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing getSignature: ${a.message}`);throw new v("An unknown error occurred while fetching signature for CID")}},aO=async(a,b,c)=>{let d;if(!a)throw new y("Pinata configuration is missing");d=a.customHeaders&&Object.keys(a.customHeaders).length>0?{...a.customHeaders}:{Authorization:`Bearer ${a.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/removeSignature"};let e="https://api.pinata.cloud/v3";a.endpointUrl&&(e=a.endpointUrl);try{let a=await fetch(`${e}/files/${c}/signature/${b}`,{method:"DELETE",headers:d});if(!a.ok){let b=await a.text();if(401===a.status||403===a.status)throw new x(`Authentication failed: ${b}`,a.status,{error:b,code:"AUTH_ERROR",metadata:{requestUrl:a.url}});throw new w(`HTTP error: ${b}`,a.status,{error:b,code:"HTTP_ERROR",metadata:{requestUrl:a.url}})}return"OK"}catch(a){if(a instanceof v)throw a;if(a instanceof Error)throw new v(`Error processing addSignature: ${a.message}`);throw new v("An unknown error occurred while adding signature to CID")}},aP=class{constructor(a){this.config=C(a)}updateConfig(a){this.config=a}add(a){return aM(this.config,a,"public")}get(a){return aN(this.config,a,"public")}delete(a){return aO(this.config,a,"public")}},aQ=class{constructor(a){this.config=C(a),this.public=new aP(a)}updateConfig(a){this.config=a}};let aR=new class{constructor(a){this.config=C(a),this.files=new aH(this.config),this.upload=new aL(this.config),this.gateways=new ax(this.config),this.keys=new av(this.config),this.groups=new au(this.config),this.analytics=new al(this.config),this.signatures=new aQ(this.config)}setNewHeaders(a){this.config||(this.config={pinataJwt:"",customHeaders:{}}),this.config.customHeaders={...this.config.customHeaders,...a},this.files.updateConfig(this.config),this.upload.updateConfig(this.config),this.gateways.updateConfig(this.config),this.keys.updateConfig(this.config),this.groups.updateConfig(this.config),this.analytics.updateConfig(this.config),this.signatures.updateConfig(this.config)}setNewJwt(a){this.config||(this.config={pinataJwt:""}),this.config.pinataJwt=a,this.files.updateConfig(this.config),this.upload.updateConfig(this.config),this.gateways.updateConfig(this.config),this.keys.updateConfig(this.config),this.groups.updateConfig(this.config),this.analytics.updateConfig(this.config),this.signatures.updateConfig(this.config)}testAuthentication(){return F(this.config)}}({pinataJwt:`${process.env.PINATA_JWT}`,pinataGateway:"white-tricky-tern-300.mypinata.cloud"});async function aS(a){try{let b=(await a.formData()).get("file"),c=await aR.upload.public.file(b).group("9b39441e-55e4-4b46-8a27-33b06be198cd"),d=`https://white-tricky-tern-300.mypinata.cloud/files/${c.cid}`;return u.NextResponse.json(d,{status:200})}catch(a){return console.log(a),u.NextResponse.json({error:"Internal Server Error"},{status:500})}}let aT=new e.AppRouteRouteModule({definition:{kind:f.RouteKind.APP_ROUTE,page:"/(routes)/api/upload/route",pathname:"/api/upload",filename:"route",bundlePath:"app/(routes)/api/upload/route"},distDir:".next",relativeProjectDir:"",resolvedPagePath:"/Users/Jona/Desktop/instagram-clone/src/app/(routes)/api/upload/route.ts",nextConfigOutput:"",userland:d}),{workAsyncStorage:aU,workUnitAsyncStorage:aV,serverHooks:aW}=aT;function aX(){return(0,g.patchFetch)({workAsyncStorage:aU,workUnitAsyncStorage:aV})}async function aY(a,b,c){var d;let e="/(routes)/api/upload/route";"/index"===e&&(e="/");let g=await aT.prepare(a,b,{srcPage:e,multiZoneDraftMode:!1});if(!g)return b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve()),null;let{buildId:u,params:v,nextConfig:w,isDraftMode:x,prerenderManifest:y,routerServerContext:z,isOnDemandRevalidate:A,revalidateOnlyGenerated:B,resolvedPathname:C}=g,D=(0,j.normalizeAppPath)(e),E=!!(y.dynamicRoutes[D]||y.routes[C]);if(E&&!x){let a=!!y.routes[C],b=y.dynamicRoutes[D];if(b&&!1===b.fallback&&!a)throw new s.NoFallbackError}let F=null;!E||aT.isDev||x||(F="/index"===(F=C)?"/":F);let G=!0===aT.isDev||!E,H=E&&!G,I=a.method||"GET",J=(0,i.getTracer)(),K=J.getActiveScopeSpan(),L={params:v,prerenderManifest:y,renderOpts:{experimental:{cacheComponents:!!w.experimental.cacheComponents,authInterrupts:!!w.experimental.authInterrupts},supportsDynamicResponse:G,incrementalCache:(0,h.getRequestMeta)(a,"incrementalCache"),cacheLifeProfiles:null==(d=w.experimental)?void 0:d.cacheLife,isRevalidate:H,waitUntil:c.waitUntil,onClose:a=>{b.on("close",a)},onAfterTaskError:void 0,onInstrumentationRequestError:(b,c,d)=>aT.onRequestError(a,b,d,z)},sharedContext:{buildId:u}},M=new k.NodeNextRequest(a),N=new k.NodeNextResponse(b),O=l.NextRequestAdapter.fromNodeNextRequest(M,(0,l.signalFromNodeResponse)(b));try{let d=async c=>aT.handle(O,L).finally(()=>{if(!c)return;c.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let d=J.getRootSpanAttributes();if(!d)return;if(d.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${d.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let e=d.get("next.route");if(e){let a=`${I} ${e}`;c.setAttributes({"next.route":e,"http.route":e,"next.span_name":a}),c.updateName(a)}else c.updateName(`${I} ${a.url}`)}),g=async g=>{var i,j;let k=async({previousCacheEntry:f})=>{try{if(!(0,h.getRequestMeta)(a,"minimalMode")&&A&&B&&!f)return b.statusCode=404,b.setHeader("x-nextjs-cache","REVALIDATED"),b.end("This page could not be found"),null;let e=await d(g);a.fetchMetrics=L.renderOpts.fetchMetrics;let i=L.renderOpts.pendingWaitUntil;i&&c.waitUntil&&(c.waitUntil(i),i=void 0);let j=L.renderOpts.collectedTags;if(!E)return await (0,o.I)(M,N,e,L.renderOpts.pendingWaitUntil),null;{let a=await e.blob(),b=(0,p.toNodeOutgoingHttpHeaders)(e.headers);j&&(b[r.NEXT_CACHE_TAGS_HEADER]=j),!b["content-type"]&&a.type&&(b["content-type"]=a.type);let c=void 0!==L.renderOpts.collectedRevalidate&&!(L.renderOpts.collectedRevalidate>=r.INFINITE_CACHE)&&L.renderOpts.collectedRevalidate,d=void 0===L.renderOpts.collectedExpire||L.renderOpts.collectedExpire>=r.INFINITE_CACHE?void 0:L.renderOpts.collectedExpire;return{value:{kind:t.CachedRouteKind.APP_ROUTE,status:e.status,body:Buffer.from(await a.arrayBuffer()),headers:b},cacheControl:{revalidate:c,expire:d}}}}catch(b){throw(null==f?void 0:f.isStale)&&await aT.onRequestError(a,b,{routerKind:"App Router",routePath:e,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:H,isOnDemandRevalidate:A})},z),b}},l=await aT.handleResponse({req:a,nextConfig:w,cacheKey:F,routeKind:f.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:y,isRoutePPREnabled:!1,isOnDemandRevalidate:A,revalidateOnlyGenerated:B,responseGenerator:k,waitUntil:c.waitUntil});if(!E)return null;if((null==l||null==(i=l.value)?void 0:i.kind)!==t.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==l||null==(j=l.value)?void 0:j.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,h.getRequestMeta)(a,"minimalMode")||b.setHeader("x-nextjs-cache",A?"REVALIDATED":l.isMiss?"MISS":l.isStale?"STALE":"HIT"),x&&b.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let m=(0,p.fromNodeOutgoingHttpHeaders)(l.value.headers);return(0,h.getRequestMeta)(a,"minimalMode")&&E||m.delete(r.NEXT_CACHE_TAGS_HEADER),!l.cacheControl||b.getHeader("Cache-Control")||m.get("Cache-Control")||m.set("Cache-Control",(0,q.getCacheControlHeader)(l.cacheControl)),await (0,o.I)(M,N,new Response(l.value.body,{headers:m,status:l.value.status||200})),null};K?await g(K):await J.withPropagatedContext(a.headers,()=>J.trace(m.BaseServerSpan.handleRequest,{spanName:`${I} ${a.url}`,kind:i.SpanKind.SERVER,attributes:{"http.method":I,"http.target":a.url}},g))}catch(b){if(K||b instanceof s.NoFallbackError||await aT.onRequestError(a,b,{routerKind:"App Router",routePath:D,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:H,isOnDemandRevalidate:A})}),E)throw b;return await (0,o.I)(M,N,new Response(null,{status:500})),null}}},78335:()=>{},86439:a=>{"use strict";a.exports=require("next/dist/shared/lib/no-fallback-error.external")},95736:(a,b,c)=>{"use strict";a.exports=c(44870)},96487:()=>{}};var b=require("../../../../webpack-runtime.js");b.C(a);var c=b.X(0,[873,428,641],()=>b(b.s=63440));module.exports=c})();