{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [
      {
        "source": "/posts/:id",
        "destination": "/(.)posts/:id",
        "has": [
          {
            "type": "header",
            "key": "next-url",
            "value": "(?:\\/(.*))?[\\/#\\?]?"
          }
        ],
        "regex": "^/posts(?:/([^/]+?))(?:/)?$"
      }
    ],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/(.)posts/[id]",
      "regex": "^/\\(\\.\\)posts/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/\\(\\.\\)posts/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/auth/[...nextauth]",
      "regex": "^/api/auth/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPnextauth": "nxtPnextauth"
      },
      "namedRegex": "^/api/auth/(?<nxtPnextauth>.+?)(?:/)?$"
    },
    {
      "page": "/inbox/[id]",
      "regex": "^/inbox/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/inbox/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/posts/[id]",
      "regex": "^/posts/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/posts/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/users/[username]",
      "regex": "^/users/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPusername": "nxtPusername"
      },
      "namedRegex": "^/users/(?<nxtPusername>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/browse",
      "regex": "^/browse(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/browse(?:/)?$"
    },
    {
      "page": "/create",
      "regex": "^/create(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/create(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/inbox",
      "regex": "^/inbox(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/inbox(?:/)?$"
    },
    {
      "page": "/profile",
      "regex": "^/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profile(?:/)?$"
    },
    {
      "page": "/profile/bookmarked",
      "regex": "^/profile/bookmarked(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profile/bookmarked(?:/)?$"
    },
    {
      "page": "/search",
      "regex": "^/search(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/search(?:/)?$"
    },
    {
      "page": "/settings",
      "regex": "^/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}